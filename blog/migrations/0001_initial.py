# Generated by Django 3.1.7 on 2021-03-10 13:18

from django.db import migrations, models
import django.db.models.deletion
import taggit.managers
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('taggit', '0003_taggeditem_add_unique_index'),
    ]

    operations = [
        migrations.CreateModel(
            name='UUIDTaggedItem',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'object_id',
                    models.UUIDField(db_index=True, verbose_name='object ID'),
                ),
                (
                    'content_type',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='blog_uuidtaggeditem_tagged_items',
                        to='contenttypes.contenttype',
                        verbose_name='content type',
                    ),
                ),
                (
                    'tag',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='blog_uuidtaggeditem_items',
                        to='taggit.tag',
                    ),
                ),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('is_only_repost', models.BooleanField(default=False)),
                ('body', models.CharField(editable=False, max_length=300)),
                ('heart_count', models.PositiveBigIntegerField(default=0)),
                ('reply_count', models.PositiveBigIntegerField(default=0)),
                ('repost_count', models.PositiveBigIntegerField(default=0)),
                ('is_reply', models.BooleanField(default=False)),
                ('is_repost', models.BooleanField(default=False)),
                (
                    'id',
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    'hashtags',
                    taggit.managers.TaggableManager(
                        help_text='A comma-separated list of tags.',
                        through='blog.UUIDTaggedItem',
                        to='taggit.Tag',
                        verbose_name='Tags',
                    ),
                ),
                (
                    'reply_to',
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='replies',
                        to='blog.post',
                    ),
                ),
                (
                    'repost_of',
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='reposts',
                        to='blog.post',
                    ),
                ),
            ],
            options={
                'ordering': ('-timestamp',),
            },
        ),
    ]
